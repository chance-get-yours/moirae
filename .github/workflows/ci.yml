name: PR - Main

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NPM_TOKEN: ${{ secrets.NPM_PUBLISH }}

jobs:
  test-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        package: [core, node-plugin, rabbitmq, redis, typeorm]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Rush Install
        run: node common/scripts/install-run-rush.js install @moirae/${{ matrix.package }}
      - name: Rush Build
        run: node common/scripts/install-run-rush.js build -T @moirae/${{ matrix.package }}
      - name: Test Package ${{ matrix.package }}
        run: npm run test --prefix moirae/${{ matrix.package }}
  demo-unittest:
    runs-on: ubuntu-latest
    needs: test-packages
    strategy:
      matrix:
        node_version: [16.x]
        package: [account, common, gateway, monolith]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Rush Install
        run: node common/scripts/install-run-rush.js install @demo/${{ matrix.package }}
      - name: Rush Build
        run: node common/scripts/install-run-rush.js build -T @demo/${{ matrix.package }}
      - name: Test Package ${{ matrix.package }}
        run: npm run test --prefix demo/${{ matrix.package }}
  # integration-e2e:
  #   runs-on: ubuntu-latest
  #   needs: test-packages
  #   strategy:
  #     matrix:
  #       cache: [memory, redis, typeorm]
  #       node-version: [16.x]
  #       publisher: [memory, rabbitmq]
  #       store: [memory, typeorm]
  #   env:
  #     RABBIT_MQ_PORT: 5672
  #     RABBIT_MQ_HOST: localhost
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: RabbitMQ in GitHub Actions
  #       if: ${{ matrix.publisher == 'rabbitmq' }}
  #       uses: Namoshek/rabbitmq-github-action@v1.1.0
  #       with:
  #         ports: 5672:5672
  #     - name: actions-setup-redis
  #       if: ${{ matrix.cache == 'redis' }}
  #       uses: shogo82148/actions-setup-redis@v1.15.4
  #     - name: Setup Node
  #       uses: actions/setup-node@v3.1.1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
  #     - name: Restore cache if available
  #       uses: actions/cache@v3
  #       id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       run: yarn install --immutable
  #     - name: Build packages
  #       run: yarn build
  #     - name: E2E test demo-app
  #       run: env CACHE_TYPE=${{ matrix.cache }} env PUB_TYPE=${{ matrix.publisher }} env STORE_TYPE=${{ matrix.store }} yarn workspace demo-app test:e2e