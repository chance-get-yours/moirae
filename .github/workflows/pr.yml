name: PR - Main

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        package: [core, rabbitmq-publisher, typeorm-store]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache if available
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build packages
        run: yarn build
      - name: Test Package ${{ matrix.package }}
        run: yarn workspace @moirae/${{ matrix.package }} test
  integration-units:
      runs-on: ubuntu-latest
      needs: test-packages
      strategy:
        matrix:
          node-version: [16.x]
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup Node
          uses: actions/setup-node@v3.1.1
          with:
            node-version: ${{ matrix.node-version }}
        - name: Get yarn cache directory path
          id: yarn-cache-dir-path
          run: echo "::set-output name=dir::$(yarn cache dir)"
        - name: Restore yarn cache if available
          uses: actions/cache@v1
          id: yarn-cache
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - name: Install dependencies
          run: yarn install --frozen-lockfile
        - name: Build packages
          run: yarn build
        - name: Unittest demo-app
          run: yarn workspace demo-app test
  integration-e2e:
    runs-on: ubuntu-latest
    needs: test-packages
    strategy:
      matrix:
        cache: [memory]
        node-version: [16.x]
        publisher: [memory, rabbitmq]
        store: [memory, typeorm]
    env:
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_HOST: localhost
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: RabbitMQ in GitHub Actions
        if: ${{ matrix.publisher == 'rabbitmq' }}
        uses: Namoshek/rabbitmq-github-action@v1.1.0
        with:
          ports: 5672:5672
      - name: Setup Node
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore yarn cache if available
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build packages
        run: yarn build
      - name: E2E test demo-app
        run: env CACHE_TYPE=${{ matrix.cache }} env PUB_TYPE=${{ matrix.publisher }} env STORE_TYPE=${{ matrix.store }} yarn workspace demo-app test:e2e
